{"version":3,"file":"static/js/801.54e32e7a.chunk.js","mappings":"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","sources":["api/moviesAPI.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","images/search.svg","pages/Movies/Movies.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nexport const API_KEY = 'bb95fe38b7df9f87f0ecf707b6f0bb8b';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const fetchQueryMovies = async querySearch => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${querySearch}&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movies');\n  }\n};\n\nexport const normalizeMoviesList = arr => {\n  return arr.map(({ id, title, release_date, vote_average, poster_path }) => ({\n    id,\n    title,\n    release_date,\n    rating: vote_average.toFixed(1),\n    poster: poster_path\n      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n      : `https://thumbs.dreamstime.com/b/%D0%B8-%D1%8E%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF-%D0%B0%D0%BA%D0%B0%D1%82%D0%B0-%D0%BA%D0%B8%D0%BD%D0%BE-48746594.jpg`,\n  }));\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching movie');\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching cast');\n  }\n};\n\nexport const normalizedCast = arr => {\n  return arr.map(({ cast_id, character, name, profile_path }) => ({\n    id: cast_id,\n    character,\n    name,\n    photo: profile_path\n      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n      : `https://you-anime.ru/anime-images/characters/WNbWU2vEyeW5hAyO.jpg`,\n  }));\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n  } catch (error) {\n    console.error(error);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n\nexport const normalizedReviews = arr => {\n  return arr.map(({ id, content, author_details, author }) => ({\n    id,\n    author,\n    content,\n    userName: author_details.username,\n    avatar:\n      author_details.avatar_path &&\n      author_details.avatar_path.startsWith('/http')\n        ? author_details.avatar_path.slice(1, author_details.avatar_path.length)\n        : `https://image.tmdb.org/t/p/w500${author_details.avatar_path}`,\n  }));\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.error(e);\n    Notiflix.Notify.failure('Error fetching reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#ffd700\"\n        secondaryColor=\"#ffd700\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListOfMovies = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 10px;\n\n  > li {\n    border-radius: 10px;\n    overflow: hidden;\n    &:hover {\n      filter: drop-shadow(0px 4px 16px rgba(0, 0, 0, 0.45));\n    }\n  }\n  @media (min-width: 768px) {\n    flex-direction: row;\n    > li {\n      flex-basis: calc((100% - 2 * 16px) / 3);\n    }\n  }\n  @media (min-width: 1200px) {\n    > li {\n      flex-basis: calc((100% - 4 * 16px) / 5);\n    }\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  color: currentColor;\n  text-decoration: none;\n  flex-direction: column;\n`;\n\nexport const ItemBox = styled.div`\n  position: relative;\n  padding: 10px;\n  display: flex;\n  gap: 4px;\n  align-items: stretch;\n  flex-direction: column;\n`;\nexport const Rating = styled.div`\n  position: absolute;\n  top: -25px;\n  left: 5px;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  box-shadow: 1px 1px 20px #ffd700;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  color: #fff;\n  background-color: #483d8b;\n`;\n\nexport const TitleMovie = styled.h2`\n  margin-top: 15px;\n  font-size: 19px;\n  color: #dcdcdc;\n`;\n\nexport const ReleaseMovie = styled.p`\n  font-size: 17px;\n  color: #dcdcdc;\n  opacity: 0.8;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Link,\n  TitleMovie,\n  ReleaseMovie,\n  ItemBox,\n  Rating,\n  ListOfMovies,\n} from 'components/MoviesList/MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListOfMovies>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img src={movie.poster} alt={movie.title} />\n            <ItemBox>\n              <Rating>\n                <b>{movie.rating}</b>\n              </Rating>\n              <TitleMovie>{movie.title}</TitleMovie>\n              <ReleaseMovie>{movie.release_date}</ReleaseMovie>\n            </ItemBox>\n          </Link>\n        </li>\n      ))}\n    </ListOfMovies>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      rating: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\nexport default MoviesList;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.41667 11.0833C8.994 11.0833 11.0833 8.994 11.0833 6.41667C11.0833 3.83934 8.994 1.75 6.41667 1.75C3.83934 1.75 1.75 3.83934 1.75 6.41667C1.75 8.994 3.83934 11.0833 6.41667 11.0833Z\",\n    stroke: \"black\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.2497 12.2501L9.71216 9.71265\",\n    stroke: \"black\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.36368a2918957c34bd6ab1452942b07a.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const MovieMain = styled.main`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  \n}\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SerchForm = styled.form`\n  width: 250px;\n  margin-top: 20px;\n  position: relative;\n  border-radius: 100px;\n  padding: 10px 15px;\n\n  background: #ffffff;\n\n  > input {\n    border: none;\n    outline: none;\n  }\n`;\nexport const SerchButton = styled.button`\n  border: none;\n  position: absolute;\n  right: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  opacity: 0.5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { SerchForm, SerchButton } from './SearchForm.styled';\nimport { ReactComponent as SerchIcon } from './../../images/search.svg';\n\nconst SearchFormForMovies = ({ value, onChange, onSubmit }) => {\n  return (\n    <SerchForm onSubmit={onSubmit}>\n      <input\n        name=\"search\"\n        type=\"text\"\n        placeholder=\"Movies search...\"\n        value={value}\n        onChange={onChange}\n      />\n      <SerchButton type=\"submit\">\n        <SerchIcon width=\"20px\" height=\"20px\" />\n      </SerchButton>\n    </SerchForm>\n  );\n};\n\nSearchFormForMovies.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchFormForMovies;\n","import Notiflix from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { MovieMain } from './Movies.styled';\nimport { fetchQueryMovies, normalizeMoviesList } from 'api/moviesAPI';\nimport SearchFormForMovies from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const fromParams = searchParams.get('query');\n\n  useEffect(() => {\n    if (fromParams === null) {\n      return;\n    }\n    try {\n      const getQueryMovies = async () => {\n        setIsLoading(true);\n        const {\n          data: { results },\n        } = await fetchQueryMovies(fromParams);\n        if (!results.length) {\n          Notiflix.Notify.warning(\n            'Oops there are no movies by this search, try another title'\n          );\n        }\n        setMovies(normalizeMoviesList(results));\n      };\n\n      getQueryMovies();\n    } catch (error) {\n      console.error(error);\n      Notiflix.Notify.failure('Error fetching movies');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [fromParams, searchParams]);\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target.elements.search?.value;\n    if (!value || value.trim() === '') {\n      Notiflix.Notify.failure('Enter title of movie to search');\n      return;\n    }\n    setQuery(value.toLowerCase().trim());\n    setSearchParams({ query: value.toLowerCase().trim() });\n  };\n\n  return (\n    <MovieMain>\n      <SearchFormForMovies\n        value={query}\n        onChange={onChange}\n        onSubmit={handleSubmit}\n      />\n      {isLoading && <Loader />}\n      {movies ? <MoviesList movies={movies} /> : <></>}\n    </MovieMain>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchTrendingMovies","axios","console","error","Notiflix","fetchQueryMovies","querySearch","normalizeMoviesList","arr","map","id","title","release_date","vote_average","poster_path","rating","toFixed","poster","fetchMoviesById","movieId","fetchCastInfo","normalizedCast","cast_id","character","name","profile_path","photo","fetchReviews","normalizedReviews","content","author_details","author","userName","username","avatar","avatar_path","startsWith","slice","length","fetchTrailerVideo","LoaderBox","styled","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","ListOfMovies","Link","NavLink","ItemBox","Rating","TitleMovie","ReleaseMovie","movies","location","useLocation","movie","to","state","from","src","alt","_path","_path2","MovieMain","SerchForm","SerchButton","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","value","onChange","onSubmit","type","placeholder","useState","setMovies","query","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","fromParams","get","useEffect","getQueryMovies","results","data","SearchForm","e","preventDefault","elements","search","trim","toLowerCase","Loader","MoviesList"],"sourceRoot":""}